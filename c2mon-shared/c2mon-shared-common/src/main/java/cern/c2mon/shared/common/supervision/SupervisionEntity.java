package cern.c2mon.shared.common.supervision;

import static java.util.Objects.requireNonNull;

/**
 * Entities that are supervised.
 *
 * @author Alexandros Papageorgiou, Mark Brightwell
 *
 */
public enum SupervisionEntity { PROCESS, EQUIPMENT, SUBEQUIPMENT;

  /**
   * If the aliveType is ALIVE_TYPE_PROCESS, the alive tag is generated by the
   * DAQ process.
   */
  private final static String TYPE_PROCESS = "PROC";

  /**
   * If the aliveType is ALIVE_TYPE_EQUIPMENT, the alive tag is generated by the
   * equipment from which TIM acquires the data.
   */
  private final static String TYPE_EQUIPMENT = "EQ";

  /**
   * If the aliveType is ALIVE_TYPE_SUBEQUIPMENT, the alive tag is generated by the
   * subequipment attached to one of the equipments.
   */
  private final static String TYPE_SUBEQUIPMENT = "SUBEQ";

  /**
   * Attempts to read the argument given and convert it to a {@link SupervisionEntity}
   *
   * @return the SupervisionEntity that corresponds to the String passed
   * @throws IllegalArgumentException if input does not match a known type
   */
  public static SupervisionEntity parse(String input) {
    requireNonNull(input, "Can not parse null input into Supervision entity");
    input = input.trim();

    if (TYPE_PROCESS.equalsIgnoreCase(input))
      return PROCESS;
    if (TYPE_EQUIPMENT.equalsIgnoreCase(input))
      return EQUIPMENT;
    if (TYPE_SUBEQUIPMENT.equalsIgnoreCase(input))
      return SUBEQUIPMENT;

    throw new IllegalArgumentException(input + " is not any of " + TYPE_PROCESS + ", " + TYPE_EQUIPMENT + ", " + TYPE_SUBEQUIPMENT);
  }
}
